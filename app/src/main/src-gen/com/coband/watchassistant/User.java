package com.coband.watchassistant;

import java.util.List;
import com.coband.watchassistant.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table "USER".
 */
public class User {

    private Long id;
    private String username;
    private double height;
    private double weight;
    private int gendar;
    private long birthday;
    private String nick;
    private int walkTarget;
    private double weightTarget;
    private int caloryTarget;
    private int timeTarget;
    private int sleepTarget;
    private String appVersion;
    private String email;
    private String sessionToken;
    private String updatedAt;
    private int sportTimeTarget;
    private int sex;
    private String firmwareSystemVersion;
    private int unit;
    private String userDeviceSystemVersion;
    private String createdAt;
    private double totalDistance;
    private int copperNumber;
    private int silverNumber;
    private boolean emailVerified;
    private int upvotes;
    private int dayHighestSteps;
    private String surfaceImg;
    private int totalExerciceDays;
    private String bestSportInfoWithDay;
    private String objectId;
    private String avatar;
    private int goldNumber;
    private double totalCalories;
    private int ranking;
    private float distanceTarget;
    private long beginSportTimestamp;
    private String userDeviceType;
    private int totalWalkCount;
    private boolean mobilePhoneVerified;
    private String archivementList;
    private String deviceTypes;
    private int whichClock;
    private boolean isMessage;
    private boolean isMotorOn;
    private boolean isScreenOn;
    private boolean disturbTimeSwitch;
    private int fromTimeHour;
    private int fromTimeMinute;
    private int toTimeHour;
    private int toTimeMinute;
    private boolean heartRate;
    private int highestHeartRate;
    private boolean periodTest;
    private int period;
    private boolean inCallRemind;
    private int vibrationsTimes;
    private String messageRemind;
    private boolean isOpenMessageRemind;
    private int sedentaryTime;
    private boolean isOpenSedentaryRemind;
    private boolean isOpenWeatherPush;
    private boolean is24Format;
    private int lightScreenTime;
    private boolean smartAnti_lost;
    private String bandName;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient UserDao myDao;

    private List<Follower> followers;
    private List<Followee> followees;

    public User() {
    }

    public User(Long id) {
        this.id = id;
    }

    public User(Long id, String username, double height, double weight, int gendar, long birthday, String nick, int walkTarget, double weightTarget, int caloryTarget, int timeTarget, int sleepTarget, String appVersion, String email, String sessionToken, String updatedAt, int sportTimeTarget, int sex, String firmwareSystemVersion, int unit, String userDeviceSystemVersion, String createdAt, double totalDistance, int copperNumber, int silverNumber, boolean emailVerified, int upvotes, int dayHighestSteps, String surfaceImg, int totalExerciceDays, String bestSportInfoWithDay, String objectId, String avatar, int goldNumber, double totalCalories, int ranking, float distanceTarget, long beginSportTimestamp, String userDeviceType, int totalWalkCount, boolean mobilePhoneVerified, String archivementList, String deviceTypes, int whichClock, boolean isMessage, boolean isMotorOn, boolean isScreenOn, boolean disturbTimeSwitch, int fromTimeHour, int fromTimeMinute, int toTimeHour, int toTimeMinute, boolean heartRate, int highestHeartRate, boolean periodTest, int period, boolean inCallRemind, int vibrationsTimes, String messageRemind, boolean isOpenMessageRemind, int sedentaryTime, boolean isOpenSedentaryRemind, boolean isOpenWeatherPush, boolean is24Format, int lightScreenTime, boolean smartAnti_lost, String bandName) {
        this.id = id;
        this.username = username;
        this.height = height;
        this.weight = weight;
        this.gendar = gendar;
        this.birthday = birthday;
        this.nick = nick;
        this.walkTarget = walkTarget;
        this.weightTarget = weightTarget;
        this.caloryTarget = caloryTarget;
        this.timeTarget = timeTarget;
        this.sleepTarget = sleepTarget;
        this.appVersion = appVersion;
        this.email = email;
        this.sessionToken = sessionToken;
        this.updatedAt = updatedAt;
        this.sportTimeTarget = sportTimeTarget;
        this.sex = sex;
        this.firmwareSystemVersion = firmwareSystemVersion;
        this.unit = unit;
        this.userDeviceSystemVersion = userDeviceSystemVersion;
        this.createdAt = createdAt;
        this.totalDistance = totalDistance;
        this.copperNumber = copperNumber;
        this.silverNumber = silverNumber;
        this.emailVerified = emailVerified;
        this.upvotes = upvotes;
        this.dayHighestSteps = dayHighestSteps;
        this.surfaceImg = surfaceImg;
        this.totalExerciceDays = totalExerciceDays;
        this.bestSportInfoWithDay = bestSportInfoWithDay;
        this.objectId = objectId;
        this.avatar = avatar;
        this.goldNumber = goldNumber;
        this.totalCalories = totalCalories;
        this.ranking = ranking;
        this.distanceTarget = distanceTarget;
        this.beginSportTimestamp = beginSportTimestamp;
        this.userDeviceType = userDeviceType;
        this.totalWalkCount = totalWalkCount;
        this.mobilePhoneVerified = mobilePhoneVerified;
        this.archivementList = archivementList;
        this.deviceTypes = deviceTypes;
        this.whichClock = whichClock;
        this.isMessage = isMessage;
        this.isMotorOn = isMotorOn;
        this.isScreenOn = isScreenOn;
        this.disturbTimeSwitch = disturbTimeSwitch;
        this.fromTimeHour = fromTimeHour;
        this.fromTimeMinute = fromTimeMinute;
        this.toTimeHour = toTimeHour;
        this.toTimeMinute = toTimeMinute;
        this.heartRate = heartRate;
        this.highestHeartRate = highestHeartRate;
        this.periodTest = periodTest;
        this.period = period;
        this.inCallRemind = inCallRemind;
        this.vibrationsTimes = vibrationsTimes;
        this.messageRemind = messageRemind;
        this.isOpenMessageRemind = isOpenMessageRemind;
        this.sedentaryTime = sedentaryTime;
        this.isOpenSedentaryRemind = isOpenSedentaryRemind;
        this.isOpenWeatherPush = isOpenWeatherPush;
        this.is24Format = is24Format;
        this.lightScreenTime = lightScreenTime;
        this.smartAnti_lost = smartAnti_lost;
        this.bandName = bandName;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getUserDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public double getHeight() {
        return height;
    }

    public void setHeight(double height) {
        this.height = height;
    }

    public double getWeight() {
        return weight;
    }

    public void setWeight(double weight) {
        this.weight = weight;
    }

    public int getGendar() {
        return gendar;
    }

    public void setGendar(int gendar) {
        this.gendar = gendar;
    }

    public long getBirthday() {
        return birthday;
    }

    public void setBirthday(long birthday) {
        this.birthday = birthday;
    }

    public String getNick() {
        return nick;
    }

    public void setNick(String nick) {
        this.nick = nick;
    }

    public int getWalkTarget() {
        return walkTarget;
    }

    public void setWalkTarget(int walkTarget) {
        this.walkTarget = walkTarget;
    }

    public double getWeightTarget() {
        return weightTarget;
    }

    public void setWeightTarget(double weightTarget) {
        this.weightTarget = weightTarget;
    }

    public int getCaloryTarget() {
        return caloryTarget;
    }

    public void setCaloryTarget(int caloryTarget) {
        this.caloryTarget = caloryTarget;
    }

    public int getTimeTarget() {
        return timeTarget;
    }

    public void setTimeTarget(int timeTarget) {
        this.timeTarget = timeTarget;
    }

    public int getSleepTarget() {
        return sleepTarget;
    }

    public void setSleepTarget(int sleepTarget) {
        this.sleepTarget = sleepTarget;
    }

    public String getAppVersion() {
        return appVersion;
    }

    public void setAppVersion(String appVersion) {
        this.appVersion = appVersion;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getSessionToken() {
        return sessionToken;
    }

    public void setSessionToken(String sessionToken) {
        this.sessionToken = sessionToken;
    }

    public String getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
    }

    public int getSportTimeTarget() {
        return sportTimeTarget;
    }

    public void setSportTimeTarget(int sportTimeTarget) {
        this.sportTimeTarget = sportTimeTarget;
    }

    public int getSex() {
        return sex;
    }

    public void setSex(int sex) {
        this.sex = sex;
    }

    public String getFirmwareSystemVersion() {
        return firmwareSystemVersion;
    }

    public void setFirmwareSystemVersion(String firmwareSystemVersion) {
        this.firmwareSystemVersion = firmwareSystemVersion;
    }

    public int getUnit() {
        return unit;
    }

    public void setUnit(int unit) {
        this.unit = unit;
    }

    public String getUserDeviceSystemVersion() {
        return userDeviceSystemVersion;
    }

    public void setUserDeviceSystemVersion(String userDeviceSystemVersion) {
        this.userDeviceSystemVersion = userDeviceSystemVersion;
    }

    public String getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(String createdAt) {
        this.createdAt = createdAt;
    }

    public double getTotalDistance() {
        return totalDistance;
    }

    public void setTotalDistance(double totalDistance) {
        this.totalDistance = totalDistance;
    }

    public int getCopperNumber() {
        return copperNumber;
    }

    public void setCopperNumber(int copperNumber) {
        this.copperNumber = copperNumber;
    }

    public int getSilverNumber() {
        return silverNumber;
    }

    public void setSilverNumber(int silverNumber) {
        this.silverNumber = silverNumber;
    }

    public boolean getEmailVerified() {
        return emailVerified;
    }

    public void setEmailVerified(boolean emailVerified) {
        this.emailVerified = emailVerified;
    }

    public int getUpvotes() {
        return upvotes;
    }

    public void setUpvotes(int upvotes) {
        this.upvotes = upvotes;
    }

    public int getDayHighestSteps() {
        return dayHighestSteps;
    }

    public void setDayHighestSteps(int dayHighestSteps) {
        this.dayHighestSteps = dayHighestSteps;
    }

    public String getSurfaceImg() {
        return surfaceImg;
    }

    public void setSurfaceImg(String surfaceImg) {
        this.surfaceImg = surfaceImg;
    }

    public int getTotalExerciceDays() {
        return totalExerciceDays;
    }

    public void setTotalExerciceDays(int totalExerciceDays) {
        this.totalExerciceDays = totalExerciceDays;
    }

    public String getBestSportInfoWithDay() {
        return bestSportInfoWithDay;
    }

    public void setBestSportInfoWithDay(String bestSportInfoWithDay) {
        this.bestSportInfoWithDay = bestSportInfoWithDay;
    }

    public String getObjectId() {
        return objectId;
    }

    public void setObjectId(String objectId) {
        this.objectId = objectId;
    }

    public String getAvatar() {
        return avatar;
    }

    public void setAvatar(String avatar) {
        this.avatar = avatar;
    }

    public int getGoldNumber() {
        return goldNumber;
    }

    public void setGoldNumber(int goldNumber) {
        this.goldNumber = goldNumber;
    }

    public double getTotalCalories() {
        return totalCalories;
    }

    public void setTotalCalories(double totalCalories) {
        this.totalCalories = totalCalories;
    }

    public int getRanking() {
        return ranking;
    }

    public void setRanking(int ranking) {
        this.ranking = ranking;
    }

    public float getDistanceTarget() {
        return distanceTarget;
    }

    public void setDistanceTarget(float distanceTarget) {
        this.distanceTarget = distanceTarget;
    }

    public long getBeginSportTimestamp() {
        return beginSportTimestamp;
    }

    public void setBeginSportTimestamp(long beginSportTimestamp) {
        this.beginSportTimestamp = beginSportTimestamp;
    }

    public String getUserDeviceType() {
        return userDeviceType;
    }

    public void setUserDeviceType(String userDeviceType) {
        this.userDeviceType = userDeviceType;
    }

    public int getTotalWalkCount() {
        return totalWalkCount;
    }

    public void setTotalWalkCount(int totalWalkCount) {
        this.totalWalkCount = totalWalkCount;
    }

    public boolean getMobilePhoneVerified() {
        return mobilePhoneVerified;
    }

    public void setMobilePhoneVerified(boolean mobilePhoneVerified) {
        this.mobilePhoneVerified = mobilePhoneVerified;
    }

    public String getArchivementList() {
        return archivementList;
    }

    public void setArchivementList(String archivementList) {
        this.archivementList = archivementList;
    }

    public String getDeviceTypes() {
        return deviceTypes;
    }

    public void setDeviceTypes(String deviceTypes) {
        this.deviceTypes = deviceTypes;
    }

    public int getWhichClock() {
        return whichClock;
    }

    public void setWhichClock(int whichClock) {
        this.whichClock = whichClock;
    }

    public boolean getIsMessage() {
        return isMessage;
    }

    public void setIsMessage(boolean isMessage) {
        this.isMessage = isMessage;
    }

    public boolean getIsMotorOn() {
        return isMotorOn;
    }

    public void setIsMotorOn(boolean isMotorOn) {
        this.isMotorOn = isMotorOn;
    }

    public boolean getIsScreenOn() {
        return isScreenOn;
    }

    public void setIsScreenOn(boolean isScreenOn) {
        this.isScreenOn = isScreenOn;
    }

    public boolean getDisturbTimeSwitch() {
        return disturbTimeSwitch;
    }

    public void setDisturbTimeSwitch(boolean disturbTimeSwitch) {
        this.disturbTimeSwitch = disturbTimeSwitch;
    }

    public int getFromTimeHour() {
        return fromTimeHour;
    }

    public void setFromTimeHour(int fromTimeHour) {
        this.fromTimeHour = fromTimeHour;
    }

    public int getFromTimeMinute() {
        return fromTimeMinute;
    }

    public void setFromTimeMinute(int fromTimeMinute) {
        this.fromTimeMinute = fromTimeMinute;
    }

    public int getToTimeHour() {
        return toTimeHour;
    }

    public void setToTimeHour(int toTimeHour) {
        this.toTimeHour = toTimeHour;
    }

    public int getToTimeMinute() {
        return toTimeMinute;
    }

    public void setToTimeMinute(int toTimeMinute) {
        this.toTimeMinute = toTimeMinute;
    }

    public boolean getHeartRate() {
        return heartRate;
    }

    public void setHeartRate(boolean heartRate) {
        this.heartRate = heartRate;
    }

    public int getHighestHeartRate() {
        return highestHeartRate;
    }

    public void setHighestHeartRate(int highestHeartRate) {
        this.highestHeartRate = highestHeartRate;
    }

    public boolean getPeriodTest() {
        return periodTest;
    }

    public void setPeriodTest(boolean periodTest) {
        this.periodTest = periodTest;
    }

    public int getPeriod() {
        return period;
    }

    public void setPeriod(int period) {
        this.period = period;
    }

    public boolean getInCallRemind() {
        return inCallRemind;
    }

    public void setInCallRemind(boolean inCallRemind) {
        this.inCallRemind = inCallRemind;
    }

    public int getVibrationsTimes() {
        return vibrationsTimes;
    }

    public void setVibrationsTimes(int vibrationsTimes) {
        this.vibrationsTimes = vibrationsTimes;
    }

    public String getMessageRemind() {
        return messageRemind;
    }

    public void setMessageRemind(String messageRemind) {
        this.messageRemind = messageRemind;
    }

    public boolean getIsOpenMessageRemind() {
        return isOpenMessageRemind;
    }

    public void setIsOpenMessageRemind(boolean isOpenMessageRemind) {
        this.isOpenMessageRemind = isOpenMessageRemind;
    }

    public int getSedentaryTime() {
        return sedentaryTime;
    }

    public void setSedentaryTime(int sedentaryTime) {
        this.sedentaryTime = sedentaryTime;
    }

    public boolean getIsOpenSedentaryRemind() {
        return isOpenSedentaryRemind;
    }

    public void setIsOpenSedentaryRemind(boolean isOpenSedentaryRemind) {
        this.isOpenSedentaryRemind = isOpenSedentaryRemind;
    }

    public boolean getIsOpenWeatherPush() {
        return isOpenWeatherPush;
    }

    public void setIsOpenWeatherPush(boolean isOpenWeatherPush) {
        this.isOpenWeatherPush = isOpenWeatherPush;
    }

    public boolean getIs24Format() {
        return is24Format;
    }

    public void setIs24Format(boolean is24Format) {
        this.is24Format = is24Format;
    }

    public int getLightScreenTime() {
        return lightScreenTime;
    }

    public void setLightScreenTime(int lightScreenTime) {
        this.lightScreenTime = lightScreenTime;
    }

    public boolean getSmartAnti_lost() {
        return smartAnti_lost;
    }

    public void setSmartAnti_lost(boolean smartAnti_lost) {
        this.smartAnti_lost = smartAnti_lost;
    }

    public String getBandName() {
        return bandName;
    }

    public void setBandName(String bandName) {
        this.bandName = bandName;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<Follower> getFollowers() {
        if (followers == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            FollowerDao targetDao = daoSession.getFollowerDao();
            List<Follower> followersNew = targetDao._queryUser_Followers(id);
            synchronized (this) {
                if(followers == null) {
                    followers = followersNew;
                }
            }
        }
        return followers;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetFollowers() {
        followers = null;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<Followee> getFollowees() {
        if (followees == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            FolloweeDao targetDao = daoSession.getFolloweeDao();
            List<Followee> followeesNew = targetDao._queryUser_Followees(id);
            synchronized (this) {
                if(followees == null) {
                    followees = followeesNew;
                }
            }
        }
        return followees;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetFollowees() {
        followees = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
